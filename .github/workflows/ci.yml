name: GhostZK CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build packages
      run: npm run build
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test

  wasm-build:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
    
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Build WASM modules
      run: |
        cd packages/proof-engine/wasm
        cargo build --target wasm32-unknown-unknown --release
    
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wasm-modules
        path: packages/proof-engine/wasm/target/wasm32-unknown-unknown/release/*.wasm

  deploy-relayer:
    runs-on: ubuntu-latest
    needs: [build, wasm-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build packages
      run: npm run build
    
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-modules
        path: packages/proof-engine/src/wasm
    
    - name: Deploy to production
      run: |
        # Add deployment script here
        echo "Deploying relayer to production..."
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
